STEP BY STEP PDF CLEANING

Text structure:

The names of the criminals, which are in a specific chapter of the PDF, have the following pattern:
149) Name Name -> when it's the first time they are mentioned in the document
(149) Name Name -> when they are mentioned more than once.
Then, a \n follows, and then there is a optional string that represents year of birth and death: (1990-1994),(1990-) or simply missing, if unkown. After that, the first sentence is the position the criminal occupied in the public administration at the time.

Cleaning process:

1. Use Ghostcript to extract the meaningful pages from the PDF, using the following script:
  C:\Program Files\gs\gs9.21\bin\
gswin64.exe -dNOPAUSE -dBATCH -dFirstPage=841 -dLastPage=931 -sDEVICE=pdfwrite -sOutputFile=C:\Users\Avell\Desktop\the-lede-program\data-studio\brazil-streets\pdf-truth-comission\comissao-da-verdade-data.pdf -f C:\Users\Avell\Desktop\the-lede-program\data-studio\brazil-streets\pdf-truth-comission\comissao-da-verdade.pdf

2. Use pdf2txt.py to make a text file out of it, using the following string:
  python C:\Anaconda3\Scripts\pdf2txt.py .\comissao-da-verdade-data.pdf -o .\comissao-da-verdade-data.txt

3. Open the text in Sublime Text and clean it out of the bad lines using the following regex:
  Find what: \n\d\d\d\n\n
  Replace with: nothing

  Find what: ^[\w\–]{1}\n
  Replace with: nothing

  Find what:  
  Replace with: nothing

  Find what: ^[\n\s]+$
  Replace with: nothing

4. Then I used regex again, this time to capture the meaningful lines.

  Select all: ^\d+\)\s?([’ A-Za-z\u00E0-\u00FC]+)(\([ A-Za-z\u00E0-\u00FC]*\))?[\n\s]+(\(\d\d\d\d\-(\d{2,4})?\))?\s?([\- A-Za-z\u00E0-\u00FC]+)
  
  Copied all the matches, deleted the whole text and pasted the matches again -- now the files have only the data-like strings.

  I then used the same regex and replaced the values in a machine readable format:

    Find what: ^\d+\)\s?([’ A-Za-z\u00E0-\u00FC]+)(\([ A-Za-z\u00E0-\u00FC]*\))?[\n\s]+(\(\d\d\d\d\-(\d{2,4})?\))?\s?([\- A-Za-z\u00E0-\u00FC]+)
    Replace with: \n'\1','\2','\4','\6'\n

    There is still some dirt, so the last step of cleaning it is:
    Find what: \n'
    Replace with:'

    Find what: ^\n
    Replace with: nothing

4. In the end, only one entry was missing: number 34. I updated that manually.